'''
Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.

Do not allocate extra space for another array, you must do this in place with constant memory.

For example,
Given input array nums = [1,1,2],
Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. 
It doesn't matter what you leave beyond the new length.
'''
'''注意：本题在本地 IDLE 上运行没有问题，但是在 leetCode 上运行得到错误答案，原因尚未查清

'''
解题思路 method1 ：
利用 set 函数去重，在用 len 函数计算去重后的元素个数
'''
#############  Python code  method1 ################
class Solution(object):
    def removeDuplicates(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        return len(set(nums)) 
       
'''
解题思路 method2 ：
因为数组是已排序的，比较后一个数与前一个数是否相同，不同的话记录下来，最后计算总数目
'''
#############  Python code  method2 ################
class Solution(object):
    def removeDuplicates(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if nums ==[]:
            return 0
           
        newlist = [nums[0]]   
        length = len(nums)
        for i in range(1,length):
            if nums[i] != nums[i-1]:
                newlist.append(nums[i])
        return len(newlist)
