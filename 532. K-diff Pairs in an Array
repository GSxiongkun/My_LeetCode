'''
Given an array of integers and an integer k, you need to find the number of unique k-diff pairs in the array. 
Here a k-diff pair is defined as an integer pair (i, j), where i and j are both numbers in the array 
and their absolute difference is k.

Example 1:
Input: [3, 1, 4, 1, 5], k = 2
Output: 2
Explanation: There are two 2-diff pairs in the array, (1, 3) and (3, 5).
Although we have two 1s in the input, we should only return the number of unique pairs.

Example 2:
Input:[1, 2, 3, 4, 5], k = 1
Output: 4
Explanation: There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).

Example 3:
Input: [1, 3, 1, 5, 4], k = 0
Output: 1
Explanation: There is one 0-diff pair in the array, (1, 1).

Note:
The pairs (i, j) and (j, i) count as the same pair.
The length of the array won't exceed 10,000.
All the integers in the given input belong to the range: [-1e7, 1e7].
'''

'''
解题思路：依次遍历所有元素，两两求差后取绝对值再与目标值 k 相比较
（1）给数组元素去重，减少遍历元素数目
（2）依次按序取出元素，分别与该元素后所有元素求差
（3）如果差值和目标k相同，计数器加1
（4）计数器的值就是差值为 k 的组合个数
'''

################ Python 代码 ####################

class Solution(object):
    def findPairs(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        count = 0
        if k!=0:
            nums = list(set(nums))#去除重复元素
        elif k == 0:
            if len(set(nums))==1: #针对全部元素相同的情况
                return 1
                
        L = len(nums)
        
        for i in range(L):
            first = nums.pop(0)
            for second in nums:
                if abs(first - second)== k:
                    count += 1
        return  count
