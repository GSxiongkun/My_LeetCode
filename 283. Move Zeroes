'''
Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].

Note:
You must do this in-place without making a copy of the array.
Minimize the total number of operations.
'''
'''
解题思路：
step1：统计出所给数组中的 0 的个数 count ；
step2: 用remove 函数移除数组中所有的零，用count计数移除次数；
step3：在数组末尾添加count 个0 ；
注意：remove（object） 是原址移除，直接操作数组，不返回任何数,从前向后寻找第一个object移除
     pop(index):原址移除，返回object（index），直接操作数组
    
############### python code ############################

class Solution(object):
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        
        count = 0
        for i in nums: #统计0的个数
            if i == 0:
                count += 1
        if count > 0:
            for i in range(count):
               nums.remove(0)#从前向后移除0
               nums.append(0)#从后开始添加0
